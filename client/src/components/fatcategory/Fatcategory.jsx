import "/src/components/fatcategory/Fatcategory.css";

import otelImg from "/src/assets/img-category-bg-3.png";
// üëá –ø–æ–ø—Ä–∞–≤–∏–ª –ø—É—Ç–∏: —É–±—Ä–∞–ª –ø—Ä–æ–±–µ–ª –º–µ–∂–¥—É "icons/" –∏ "fatcategory"
import firstIcon from "/src/assets/icons/fatcategory/img-category-1.png";
import secondIcon from "/src/assets/icons/fatcategory/img-category-2.png";
import thirdIcon from "/src/assets/icons/fatcategory/img-category-3.png";
import fourIcon from "/src/assets/icons/fatcategory/img-category-4.png";
import fiveIcon from "/src/assets/icons/fatcategory/img-category-5.png";
import sixIcon from "/src/assets/icons/fatcategory/img-category-6.png";
import sevenIcon from "/src/assets/icons/fatcategory/img-category-7.png";
import eightIcon from "/src/assets/icons/fatcategory/img-category-8.png";
import nineIcon from "/src/assets/icons/fatcategory/img-category-9.png";
import tenIcon from "/src/assets/icons/fatcategory/img-category-10.png";

/**
 * –î–ª—è –ø–ª–∏—Ç–æ–∫ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –º–æ–∂–Ω–æ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) –¥–æ–±–∞–≤–∏—Ç—å bgImage2x/bgImage3x
 * —á—Ç–æ–±—ã —Ä–µ—Ç–∏–Ω–∞ –±—Ä–∞–ª–∞ –±–æ–ª–µ–µ —á—ë—Ç–∫–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏.
 */
const DEFAULT_TILES = [
  { label: "–õ–æ–¥–∫–∏ \n–∏ –ø–∞—Ä–æ–º—ã", color: "white", bg: "linear-gradient(135deg,#0FB6FF,#00D586,#BEEF22)", icon: firstIcon },
  { label: "–¢–∞–∫—Å–∏", bg: "#F3F4F6", icon: secondIcon, color: "black" },
  { label: "–û—Ç–µ–ª–∏ \n–∏ —Ç—É—Ä–±–∞–∑—ã", bg: "#1DDA94", bgImage: otelImg, icon: thirdIcon },
  { label: "–ì–¥–µ –ø–æ–µ—Å—Ç—å", bg: "#FFDC4C", icon: fourIcon, color: "black" },
  { label: "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å", bg: "#7952EB", icon: fiveIcon },
  { label: "–ì–∏–¥—ã", bg: "#F3F4F6", color: "black", icon: sixIcon },
  { label: "–≠–∫—Å–∫—É—Ä—Å–∏–∏", bg: "#27D9FE", icon: sevenIcon },
  { label: "–ê—Ä–µ–Ω–¥–∞ \n–∂–∏–ª—å—è", bg: "linear-gradient(135deg,#FFC300,#FF8E00)", icon: eightIcon },
  { label: "–ú–∞–≥–∞–∑–∏–Ω—ã \n–∏ —Ä—ã–Ω–∫–∏", bg: "#F3F4F6", color: "#222", icon: nineIcon },
  { label: "–°–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏ \n–≥–æ—Ä–æ–¥–∞", bg: "#FF0043", icon: tenIcon },
];

export default function Fatcategory({ items = DEFAULT_TILES, onSelect }) {
  const firstRow = items.slice(0, 5);
  const secondRow = items.slice(5);

  const makeBaseStyle = ({ bg, color }) => {
    const isGradient = typeof bg === "string" && bg.startsWith("linear-gradient");
    return {
      ...(isGradient ? { backgroundImage: bg } : { backgroundColor: bg }),
      backgroundSize: isGradient ? "auto" : undefined,
      backgroundPosition: isGradient ? "0 0" : undefined,
      backgroundRepeat: isGradient ? "repeat" : undefined,
      color: color ?? "#fff",
    };
  };

  const Tile = (it, i) => {
    const isSmall = it.label === "–¢–∞–∫—Å–∏";
    const style = makeBaseStyle(it);

    return (
      <button
        key={`${it.label}-${i}`}
        type="button"
        className={`tile ${isSmall ? "tile--small" : ""} ${it.bgImage ? "tile--has-img" : ""}`}
        style={style}
        onClick={() => onSelect?.(it.label)}
      >
        {/* –§–æ–Ω–æ–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ –∫–∞–∫ <img> –¥–ª—è —á—ë—Ç–∫–æ—Å—Ç–∏ + srcSet (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–¥–∏—Ç–µ) */}
        {it.bgImage && (
          <img
            className="tile__bg"
            src={it.bgImage}
            srcSet={
              it.bgImage2x && it.bgImage3x
                ? `${it.bgImage2x} 2x, ${it.bgImage3x} 3x`
                : it.bgImage2x
                ? `${it.bgImage2x} 2x`
                : undefined
            }
            alt=""
            loading="lazy"
          />
        )}

        {/* –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–æ–≤–º–µ—Å—Ç–∏—Ç—å –ì–†–ê–î–ò–ï–ù–¢ + –∫–∞—Ä—Ç–∏–Ω–∫—É: –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Å–ª–æ–π */}
        {it.bgImage && style.backgroundImage && (
          <span className="tile__gradient" aria-hidden="true" />
        )}

        {/* –ò–∫–æ–Ω–∫–∞ */}
        {it.icon && <img src={it.icon} alt="" className="tile__icon" />}

        {/* –¢–µ–∫—Å—Ç */}
        <span className="tile__label">{it.label}</span>
      </button>
    );
  };

  return (
    <div className="tiles-scroll">
      <div className="tiles-wrapper">
        <div className="tiles-row">{firstRow.map(Tile)}</div>
        <div className="tiles-row">{secondRow.map(Tile)}</div>
      </div>
    </div>
  );
}
