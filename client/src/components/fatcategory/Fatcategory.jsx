import "/src/components/fatcategory/Fatcategory.css";

const DEFAULT_TILES = [
  { label: "–õ–æ–¥–∫–∏ –∏ –ø–∞—Ä–æ–º—ã", bg: "linear-gradient(135deg,#21d4fd,#b721ff)" },
  { label: "–¢–∞–∫—Å–∏", bg: "linear-gradient(135deg,#ffd86f,#fc6262)" }, // üëà —ç—Ç–∞ –±—É–¥–µ—Ç —É–∑–∫–æ–π
  { label: "–û—Ç–µ–ª–∏ –∏ —Ç—É—Ä–±–∞–∑—ã", bg: "linear-gradient(135deg,#7fefbd,#21cdc3)" },
  { label: "–ì–¥–µ –ø–æ–µ—Å—Ç—å", bg: "linear-gradient(135deg,#ffe29f,#ffa99f)" },
  { label: "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å", bg: "linear-gradient(135deg,#a18cd1,#fbc2eb)" },
  { label: "–ì–∏–¥—ã", bg: "linear-gradient(135deg,#f6d365,#fda085)" },
  { label: "–≠–∫—Å–∫—É—Ä—Å–∏–∏", bg: "linear-gradient(135deg,#74ebd5,#9face6)" },
  { label: "–ê—Ä–µ–Ω–¥–∞ –∂–∏–ª—å—è", bg: "linear-gradient(135deg,#fbd786,#f7797d)" },
  { label: "–ú–∞–≥–∞–∑–∏–Ω—ã –∏ —Ä—ã–Ω–∫–∏", bg: "linear-gradient(135deg,#fdfbfb,#ebedee)", color: "#222" },
  { label: "–°–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏ –≥–æ—Ä–æ–¥–∞", bg: "linear-gradient(135deg,#ff8177,#cf556c)" },
];

export default function Fatcategory({ items = DEFAULT_TILES, onSelect }) {
  const firstRow = items.slice(0, 5);
  const secondRow = items.slice(5);

  return (
    <div className="tiles-scroll">
      <div className="tiles-wrapper">
        <div className="tiles-row">
          {firstRow.map(({ label, bg, color }, i) => (
            <button
              key={`row1-${i}`}
              type="button"
              className={`tile ${label === "–¢–∞–∫—Å–∏" ? "tile--small" : ""}`} // üëà —É—Å–ª–æ–≤–Ω—ã–π –∫–ª–∞—Å—Å
              style={{ background: bg, color: color ?? "#fff" }}
              onClick={() => onSelect?.(label)}
            >
              <span className="tile__label">{label}</span>
            </button>
          ))}
        </div>

        <div className="tiles-row">
          {secondRow.map(({ label, bg, color }, i) => (
            <button
              key={`row2-${i}`}
              type="button"
              className="tile"
              style={{ background: bg, color: color ?? "#fff" }}
              onClick={() => onSelect?.(label)}
            >
              <span className="tile__label">{label}</span>
            </button>
          ))}
        </div>
      </div>
    </div>
  );
}
